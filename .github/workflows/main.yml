# 
name: Main Foodgram

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    name: Backend flake8 tests
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install -r ./requirements.txt 

    - name: Flake8 test
      run: |
        python -m flake8 backend/

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest 

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: 
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose.production.yml"
        target: "foodgram"
    
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd foodgram
          sudo docker compose -f docker-compose.production.yml pull
          sudo docker compose -f docker-compose.production.yml down
          sudo docker compose -f docker-compose.production.yml up -d
  
  send_message:
    name: Send message to Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message to Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Deploy done successfully!


# name: Foodgram

# on:
#   push:
#     branches:
#       - main

# jobs:
#   tests:
#     runs-on:  ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.8

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r ./requirements.txt
#       - name: Lint with flake8
#         run: flake8 .

#   build_and_push_to_docker_hub:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     needs: tests
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       - name: Login to Docker
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Push to Docker Hub
#         uses: docker/build-push-action@v2
#         with:
#           context: ./backend
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

#   build_and_push_frontend_to_docker_hub:
#     name: Pushing frontend image to Docker Hub
#     runs-on: ubuntu-latest
#     needs:
#       - tests
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       - name: Login to Docker
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Push to Docker Hub
#         uses: docker/build-push-action@v2
#         with:
#           context: ./frontend
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build_and_push_frontend_to_docker_hub
#     steps:
#       - name: executing remote ssh commands to deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           script: |
#             touch .env
#             echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#             echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#             echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#             echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#             echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#             echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#             sudo docker compose stop
#             sudo docker-compose rm web
#             sudo docker-compose rm frontend
#             sudo docker-compose pull web
#             sudo docker-compose pull frontend
#             sudo docker compose up -d

#   send_message:
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#     - name: send message
#       uses: appleboy/telegram-action@master
#       with:
#         to: ${{ secrets.TELEGRAM_TO }}
#         token: ${{ secrets.TELEGRAM_TOKEN }}
#         message: ${{ github.workflow }} успешно выполнен!